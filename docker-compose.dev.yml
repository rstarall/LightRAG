version: '3.8'

services:
  # Redis Service
  redis:
    image: redis:7-alpine
    container_name: lightrag-redis-dev
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - lightrag-dev-network
    restart: unless-stopped

  # Milvus Standalone Service
  etcd:
    container_name: lightrag-milvus-etcd-dev
    image: quay.io/coreos/etcd:v3.5.5
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    volumes:
      - etcd_data:/etcd
    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    networks:
      - lightrag-dev-network
    restart: unless-stopped

  minio:
    container_name: lightrag-milvus-minio-dev
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    ports:
      - "9001:9001"
      - "9000:9000"
    volumes:
      - minio_data:/minio_data
    command: minio server /minio_data --console-address ":9001"
    networks:
      - lightrag-dev-network
    restart: unless-stopped

  milvus-standalone:
    container_name: lightrag-milvus-standalone-dev
    image: milvusdb/milvus:v2.4.15
    command: ["milvus", "run", "standalone"]
    security_opt:
      - seccomp:unconfined
    environment:
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
    volumes:
      - milvus_data:/var/lib/milvus
      # - ./milvus.yaml:/milvus/configs/milvus.yaml
    ports:
      - "19530:19530"
      - "9091:9091"
    depends_on:
      - "etcd"
      - "minio"
    networks:
      - lightrag-dev-network
    restart: unless-stopped
  

  # Neo4J Graph Database Service
  neo4j:
    image: neo4j:5.25.1
    container_name: lightrag-neo4j-dev
    ports:
      - "7474:7474"  # Neo4j HTTP
      - "7687:7687"  # Neo4j Bolt
    environment:
      - NEO4J_AUTH=neo4j/12345678
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*
      - NEO4J_dbms_security_procedures_allowlist=apoc.*
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_apoc_import_file_use__neo4j__config=true
      - NEO4J_ACCEPT_LICENSE_AGREEMENT=yes
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins
    networks:
      - lightrag-dev-network
    restart: unless-stopped
    

  # LightRAG Main Service
  lightrag-dev:
    container_name: lightrag-dev
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "${PORT:-9621}:9621"
    volumes:
      # 数据卷挂载
      - ./data/rag_storage:/app/data/rag_storage
      - ./data/inputs:/app/data/inputs
      # 配置文件挂载
      - ./config.ini:/app/config.ini
      - ./.env:/app/.env
      # 开发环境代码挂载 - 实时同步代码更改
      - ./lightrag:/app/lightrag
      - ./setup.py:/app/setup.py
      - ./requirements.txt:/app/requirements.txt
      # 日志目录
      - ./logs:/app/logs
    env_file:
      - .env
    environment:
      # 开发环境变量
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
      - ENVIRONMENT=development
      - LOG_LEVEL=DEBUG
      # 使用官方默认PyPI源
      - PIP_INDEX_URL=https://mirrors.aliyun.com/pypi/simple/
      - PIP_TRUSTED_HOST=mirrors.aliyun.com
    depends_on:
      - redis
      - milvus-standalone
      - neo4j
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"
    # 开发环境网络配置
    networks:
      - lightrag-dev-network

  

networks:
  lightrag-dev-network:
    driver: bridge

volumes:
  redis_data:
  etcd_data:
  minio_data:
  milvus_data:
  neo4j_data:
  neo4j_logs:
  neo4j_import:
  neo4j_plugins: